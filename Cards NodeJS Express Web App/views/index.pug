extends layout

block content

  .container
    .inputarea
        h1=title
        <form method="get" action="/shuffle?">
            <div>
                <label>Enter the number of players (at least 1 and no more than 10:</label>
                <input id="players" type="number" name="players" min="1" max="10" required>
                <span class="validity"></span>
            </div>
            <div>
                <input type="submit">
            </div>
        </form>
    if dealtCardsPerUser
        .cardtable
            -   let dealt = dealtCardsPerUser;
            -   let result = JSON.parse(dealt);
            -   let trumps = result.trumps;
            -   let hands = result.handsByPlayerNumber;
            -   let winningScore = hands[0].score
            -   let multipleWinners = hands.length > 1 && (hands[0].score === hands[1].score)
                .dealer
                    p Dealer holding trump:
                    p       #{trumps.name} of #{trumps.suit} 
                each playerHand, playerIndex in hands
                    if (playerHand.score === winningScore)
                        .winner
                            p Player: #{playerIndex} scored: #{playerHand.score}
                            p Hand:
                            each card in playerHand.hand
                                if (card.suit === trumps.suit)
                                    - let score = card.value * 2;
                                    if score === 0
                                        .zerotrump
                                                p #{card.name} of #{card.suit} (#{score}) 
                                    else
                                        .scoringtrump
                                                p #{card.name} of #{card.suit} (#{score}) 
                                else
                                    if card.value === 0
                                        .zerocard
                                            p #{card.name} of #{card.suit} (#{card.value}) 
                                    else
                                        .scoringcard
                                            p #{card.name} of #{card.suit} (#{card.value}) 
                    else
                        .player
                            p Player: #{playerIndex} scored: #{playerHand.score}
                            p Hand:
                            each card in playerHand.hand
                                if (card.suit === trumps.suit)
                                    - let score = card.value * 2;
                                    if score === 0
                                        .zerotrump
                                                p #{card.name} of #{card.suit} (#{score}) 
                                    else
                                        .scoringtrump
                                                p #{card.name} of #{card.suit} (#{score}) 
                                else
                                    if card.value === 0
                                        .zerocard
                                            p #{card.name} of #{card.suit} (#{card.value}) 
                                    else
                                        .scoringcard
                                            p #{card.name} of #{card.suit} (#{card.value}) 
